---
- hosts: all
  become: yes
  tasks:
    - name: empty logs
      shell: truncate -s 0 /var/log/**/*.log

- hosts: localhost
  become: yes
  gather_facts: no
  tasks:
    - name: check quroum status'
      delegate_to: "{{ item }}"
      shell: echo stat | nc localhost 2181
      register: _result
      failed_when: "'Ncat: Connection refused' in _result.stdout"
      loop: "{{ groups['zk'] }}"
      tags:
        - zk
    - name: create tdp_user hdfs home dir
      delegate_to: "{{ groups['hdfs_nn'][0] }}"
      shell: |
        kinit -kt /etc/security/keytabs/nn.service.keytab nn/master-01.tdp@REALM.TDP
        /opt/tdp/hadoop/bin/hdfs --config /etc/hadoop/conf.nn dfs -mkdir -p /user/tdp_user
        /opt/tdp/hadoop/bin/hdfs --config /etc/hadoop/conf.nn dfs -chown -R tdp_user:tdp_user /user/tdp_user
      register: _result
      tags:
        - hdfs

    - name: Log previous action stdout to console
      debug: 
        msg: '{{ _result.stdout }}'
      tags:
        - hdfs

    - name: Create file with contents as tdp_user
      delegate_to: "{{ groups['edge'][0] }}"
      become_user: tdp_user
      shell: |
        kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
        echo "This is the first line." | /opt/tdp/hadoop/bin/hdfs --config /etc/hadoop/conf dfs -put - /user/tdp_user/testFile
        echo "This is the second (appended) line." | /opt/tdp/hadoop/bin/hdfs --config /etc/hadoop/conf dfs -appendToFile - /user/tdp_user/testFile
        /opt/tdp/hadoop/bin/hdfs --config /etc/hadoop/conf dfs -cat /user/tdp_user/testFile
      register: _result
      tags:
        - hdfs

    - name: Log previous action stdout to console
      debug: 
        msg: '{{ _result.stdout }}'
      tags:
        - hdfs

    - name: cat written contents from another node
      delegate_to: "{{ groups['hdfs_nn'][0] }}"
      become_user: tdp_user
      shell: |
        kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
        /opt/tdp/hadoop/bin/hdfs --config /etc/hadoop/conf.nn dfs -cat /user/tdp_user/testFile
      register: _result
      tags:
        - hdfs

- hosts: "{{ groups['hive_s2'][0] }}"
  become: yes
  become_user: tdp_user
  tasks: 
    - name: Create hive command file
      copy:
        dest: /home/tdp_user/hive-test
        content: |
          DROP DATABASE IF EXISTS tdp_user_db CASCADE;
          CREATE DATABASE IF NOT EXISTS tdp_user_db LOCATION '/user/tdp_user';
          SHOW DATABASES;
          USE tdp_user_db;
          SHOW TABLES;
          CREATE TABLE table_cluster_test
          (col1 int COMMENT 'Integer Column',
          col2 string COMMENT 'String Column'
          );
          SHOW TABLES;
          INSERT INTO TABLE table_cluster_test VALUES (1, 'one'), (2, 'two');
          SELECT * FROM table_cluster_test;
      tags:
        - hive
  
    - name: Run hive command file
      become: yes
      become_user: tdp_user
      shell: |
        kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
        export hive_truststore_password=Truststore123!
        echo '!run /home/tdp_user/hive-test' | /opt/tdp/hive/bin/hive --config /etc/hive/conf.s2 --service beeline -u "jdbc:hive2://master-01.tdp:2181,master-02.tdp:2181,master-03.tdp:2181/;serviceDiscoveryMode=zooKeeper;zooKeeperNamespace=hiveserver2;sslTrustStore=/etc/ssl/certs/truststore.jks;trustStorePassword=${hive_truststore_password}"
      register: _result
      tags:
        - hive

    - name: Log stderr to console
      debug: 
        msg: '{{ _result.stderr }}'
      tags:
        - hive

- hosts: hbase_client
  become: yes
  become_user: tdp_user
  tasks:
  - name: Run HBase 'list'
    become: yes
    become_user: tdp_user
    shell: |
      kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
      echo 'list' | /opt/tdp/hbase/bin/hbase --config /etc/hbase/conf shell
    register: _result
    failed_when: _result.rc != 0
    tags:
      - hbase

  - name: HBase 'list_namespace'
    become: yes
    become_user: tdp_user
    shell: |
      kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
      echo 'list_namespace' | /opt/tdp/hbase/bin/hbase --config /etc/hbase/conf shell
    register: _result
    failed_when: _result.rc != 0
    tags:
      - hbase

  - name: HBase create testTable
    become: yes
    become_user: tdp_user
    shell: |
      kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
      echo "create 'testTable', 'cf' " | /opt/tdp/hbase/bin/hbase --config /etc/hbase/conf shell
    register: _result
    failed_when: _result.rc != 0
    tags:
      - hbase

  - name: HBase put into testTable
    become: yes
    become_user: tdp_user
    shell: |
      kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
      echo "put 'testTable', 'row1', 'cf:testColumn', 'testValue'" | /opt/tdp/hbase/bin/hbase --config /etc/hbase/conf shell
    register: _result
    failed_when: _result.rc != 0
    tags:
      - hbase

  - name: HBase disable testTable
    become: yes
    become_user: tdp_user
    shell: |
      kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
      echo "disable 'testTable'" | /opt/tdp/hbase/bin/hbase --config /etc/hbase/conf shell
    register: _result
    failed_when: _result.rc != 0
    tags:
      - hbase

  - name: HBase drop testTable
    become: yes
    become_user: tdp_user
    shell: |
      kinit -kt /home/tdp_user/.keytabs/tdp_user.principal.keytab tdp_user@REALM.TDP
      echo "drop 'testTable'" | /opt/tdp/hbase/bin/hbase --config /etc/hbase/conf shell
    register: _result
    failed_when: _result.rc != 0
    tags:
      - hbase
