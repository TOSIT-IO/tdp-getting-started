---
- name: Deploy Hue
  import_playbook: ansible_roles/collections/ansible_collections/tosit/tdp/playbooks/hue.yml

# - name: update hue.ini
#   import_playbook: ansible_roles/collections/ansible_collections/tosit/tdp/playbooks/hue-update-hue.ini.yml

# - name: Deploy hue users
#   import_playbook: deploy-users.yml
#   vars:
#     users:
#       - username: test_user1
#         password: hue-user123
#       - username: test_user2
#         password: hue-user123
#     user_hdfs_policies:
#       - name: "test_user1-hdfs-home-policy"
#         description: "tdp_user access to hdfs:////user/test_user1"
#         isAuditEnabled: true
#         isEnabled: true
#         policyItems:
#           - accesses:
#               - { isAllowed: true, type: read }
#               - { isAllowed: true, type: write }
#               - { isAllowed: true, type: execute }
#             conditions: []
#             # delegateAdmin: true
#             groups: ["test_user1"]
#             users: ["test_user1"]
#         repositoryType: hdfs
#         resources:
#           path:
#             isExcludes: false
#             isRecursive: true
#             values: ["hdfs:////user/test_user1"]
#         service: hdfs-tdp
#       - name: "test_user2-hdfs-home-policy"
#         description: "tdp_user access to hdfs:////user/test_user2"
#         isAuditEnabled: true
#         isEnabled: true
#         policyItems:
#           - accesses:
#               - { isAllowed: true, type: read }
#               - { isAllowed: true, type: write }
#               - { isAllowed: true, type: execute }
#             conditions: []
#             delegateAdmin: true
#             groups: ["test_user2"]
#             users: ["test_user2"]
#         repositoryType: hdfs
#         resources:
#           path:
#             isExcludes: false
#             isRecursive: true
#             values: ["hdfs:////user/test_user2"]
#         service: hdfs-tdp
#     user_hive_policies:
#       - name: "test_user1-hive-policy"
#         description: Hive Client Check
#         service: hive-tdp
#         repositoryType: hive
#         isAuditEnabled: true
#         isEnabled: true
#         resources:
#           column:
#             isExcludes: false
#             values: ["*"]
#           database:
#             isExcludes: false
#             values: ["test_user1"]
#           table:
#             isExcludes: false
#             values: ["*"]
#         policyItems:
#           - users: ["test_user1"]
#             groups: ["test_user1"]
#             # delegateAdmin: true
#             accesses:
#               - { isAllowed: true, type: select }
#               - { isAllowed: true, type: update }
#               - { isAllowed: true, type: Create }
#               - { isAllowed: true, type: Drop }
#               - { isAllowed: true, type: Alter }
#               - { isAllowed: true, type: Index }
#               - { isAllowed: true, type: Lock }
#               - { isAllowed: true, type: All }
#               - { isAllowed: true, type: Read }
#               - { isAllowed: true, type: Write }
#               - { isAllowed: true, type: Refresh }
#             conditions: []
#       - name: "test_user2-hive-policy"
#         description: Hive Client Check
#         service: hive-tdp
#         repositoryType: hive
#         isAuditEnabled: true
#         isEnabled: true
#         resources:
#           column:
#             isExcludes: false
#             values: ["*"]
#           database:
#             isExcludes: false
#             values: ["test_user2"]
#           table:
#             isExcludes: false
#             values: ["*"]
#         policyItems:
#           - users: ["test_user2"]
#             groups: ["test_user2"]
#             delegateAdmin: true
#             accesses:
#               - { isAllowed: true, type: select }
#               - { isAllowed: true, type: update }
#               - { isAllowed: true, type: Create }
#               - { isAllowed: true, type: Drop }
#               - { isAllowed: true, type: Alter }
#               - { isAllowed: true, type: Index }
#               - { isAllowed: true, type: Lock }
#               - { isAllowed: true, type: All }
#               - { isAllowed: true, type: Read }
#               - { isAllowed: true, type: Write }
#               - { isAllowed: true, type: Refresh }
#             conditions: []
