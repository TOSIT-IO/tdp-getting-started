---
# Cluster VMs' ip, hastname, domain, cpus and memory (generates VM deployment config)
hosts:
  # |------ip-------|-hostname-|domain|cpus|memory|
  - ['192.168.32.10', worker-01, tdp, 2, 2048]
  - ['192.168.32.11', worker-02, tdp, 2, 2048]
  - ['192.168.32.12', worker-03, tdp, 2, 2048]
  - ['192.168.32.13', master-01, tdp, 3, 3072]
  - ['192.168.32.14', master-02, tdp, 3, 3072]
  - ['192.168.32.15', master-03, tdp, 3, 3072]
  - ['192.168.32.16', edge-01, tdp, 2, 2048]

# TDP
realm: REALM.TDP
num_vagrant_processes: 4

# Ranger
ranger_admin_password: RangerAdmin123

# Kerberos
kadmin_principal: admin/admin
kadmin_password: admin
kadmind_server: "{{ groups['kdc'][0] | tosit.tdp.access_fqdn(hostvars) }}"
kdc_server: "{{ groups['kdc'][0] | tosit.tdp.access_fqdn(hostvars) }} "

# Rename for ansible-kerberos-client and ansible-kerberos-server
realm_name: "{{ realm }}"
master_db_pass: krb5-master-pass
kadmin_user: "{{ kadmin_principal }}"
kadmin_pass: "{{ kadmin_password }}"
kdc_port: 88

# Service start on boot
hdfs_nn_start_on_boot: yes
hdfs_dn_start_on_boot: yes
hdfs_jn_start_on_boot: yes
hdfs_zkfc_start_on_boot: yes
yarn_nm_start_on_boot: yes
yarn_rm_start_on_boot: yes
yarn_ts_start_on_boot: yes
hbase_master_start_on_boot: yes
hbase_rs_start_on_boot: yes
hiveserver2_start_on_boot: yes
knox_start_on_boot: yes
oozie_start_on_boot: yes
ranger_admin_start_on_boot: yes
ranger_usync_start_on_boot: yes
spark_hs_start_on_boot: yes
zk_start_on_boot: yes
krb_start_on_boot: yes

# Service restart policies
hdfs_nn_restart: always
hdfs_dn_restart: always
hdfs_jn_restart: always
hdfs_zkfc_restart: always
yarn_nm_restart: always
yarn_rm_restart: always
yarn_ts_restart: always
hbase_master_restart: always
hbase_rs_restart: always
hiveserver2_restart: always
knox_restart: always
oozie_restart: always
ranger_admin_restart: always
ranger_usync_restart: always
spark_hs_restart: always
zk_restart: always


# core-site.xml - common
core_site:
  dfs.webhdfs.enabled: yes
  hadoop.proxyuser.hue.hosts: "*"
  hadoop.proxyuser.hue.groups: "*"

# oozie
oozie_user: oozie
oozie_release: oozie-5.3.0-TDP-0.1.0-SNAPSHOT
oozie_dist_file: oozie-5.3.0-TDP-0.1.0-SNAPSHOT-distro.tar.gz

# CA
ca_cert_filename: root.pem

POLICY_MGR_URL: "https://{{ groups['ranger_admin'][0] | tosit.tdp.access_fqdn(hostvars) }}:6182"

# hdfs
hdfs_user: hdfs
ranger_hdfs_install_properties:
  POLICY_MGR_URL: "{{ POLICY_MGR_URL }}"
  REPOSITORY_NAME: hdfs-tdp

# hive
ranger_hive_install_properties:
  POLICY_MGR_URL: "{{ POLICY_MGR_URL }}"
  REPOSITORY_NAME: hive-tdp

# mapred
mapred_site:
  # Enable hue to fetch app logs and display in hue ui
  # https://groups.google.com/a/cloudera.org/g/hue-user/c/QClHvlZu_20
  mapreduce.cluster.acls.enabled: "true"
  mapreduce.job.acl-view-job: "mapred,hue"
  mapreduce.job.acl-modify-job: "mapred,hue"

# Spark
spark_defaults:
  spark.eventLog.dir: hdfs://mycluster/spark-logs
  spark.history.fs.logDirectory: hdfs://mycluster/spark-logs
  spark-yarn-historyServer: "{{ groups['kdc'][0] | tosit.tdp.access_fqdn(hostvars) }}:18081"
hadoop_root_dir: /opt/tdp
hadoop_root_conf_dir: /etc/hadoop

# yarn
ranger_yarn_install_properties:
  POLICY_MGR_URL: "{{ POLICY_MGR_URL }}"
  REPOSITORY_NAME: yarn-tdp

yarn_site:
  # To enable Kerberos on the ATS UI
  yarn.timeline-service.http-authentication.type: kerberos
  yarn.timeline-service.http-authentication.kerberos.principal: HTTP/_HOST@{{ realm }}
  yarn.timeline-service.http-authentication.kerberos.keytab: /etc/security/keytabs/spnego.service.keytab

# Zookeeper
hadoop_ha_zookeeper_quorum: "{{ groups['zk'] |  map('tosit.tdp.access_fqdn', hostvars) |  map('regex_replace', '^(.*)$', '\\1:2181') | join(',') | trim}}"

# User management
users:
  - username: tdp_user
    password: tdp_user123
  - username: smoke_user
    password: smoke_user123
  - username: hue_test_user1
    password: hue-user123
    group: hue_test_user1
  - username: hue_test_user2
    password: hue-user123
    group: hue_test_user2

# Depends on hdfs service
user_hdfs_policies:
  - name: tdp_user-hdfs-home-policy
    description: tdp_user access to /user/tdp_user
    isAuditEnabled: true
    isEnabled: true
    policyItems:
      - accesses:
          - { isAllowed: true, type: read }
          - { isAllowed: true, type: write }
          - { isAllowed: true, type: execute }
        conditions: []
        delegateAdmin: true
        groups: []
        users: [tdp_user]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ["/user/tdp_user"]
    service: hdfs-tdp
  - name: smoke_user-hdfs-home-policy
    description: smoke_user access to /user/smoke_user
    isAuditEnabled: true
    isEnabled: true
    policyItems:
      - accesses:
          - { isAllowed: true, type: read }
          - { isAllowed: true, type: write }
          - { isAllowed: true, type: execute }
        conditions: []
        delegateAdmin: true
        groups: []
        users: [smoke_user]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ["hdfs:////user/smoke_user"]
    service: hdfs-tdp
  - name: "hue_test_user1-hdfs-home-policy"
    description: "tdp_user access to hdfs:////user/hue_test_user1"
    isAuditEnabled: true
    isEnabled: true
    policyItems:
      - accesses:
          - { isAllowed: true, type: read }
          - { isAllowed: true, type: write }
          - { isAllowed: true, type: execute }
        conditions: []
        # delegateAdmin: true
        groups: ["hue_test_user1"]
        users: ["hue_test_user1"]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ["hdfs:////user/hue_test_user1"]
    service: hdfs-tdp
  - name: "hue_test_user2-hdfs-home-policy"
    description: "tdp_user access to hdfs:////user/hue_test_user2"
    isAuditEnabled: true
    isEnabled: true
    policyItems:
      - accesses:
          - { isAllowed: true, type: read }
          - { isAllowed: true, type: write }
          - { isAllowed: true, type: execute }
        conditions: []
        delegateAdmin: true
        groups: ["hue_test_user2"]
        users: ["hue_test_user2"]
    repositoryType: hdfs
    resources:
      path:
        isExcludes: false
        isRecursive: true
        values: ["hdfs:////user/hue_test_user2"]
    service: hdfs-tdp

# Depends on hive service
user_hive_policies:
  - name: tdp-user-hive-policy
    description: Hive Client Check
    service: hive-tdp
    repositoryType: hive
    isAuditEnabled: true
    isEnabled: true
    resources:
      column:
        isExcludes: false
        values: ["*"]
      database:
        isExcludes: false
        values: [tdp_user_db]
      table:
        isExcludes: false
        values: ["*"]
    policyItems:
      - users: [tdp_user]
        groups: []
        delegateAdmin: true
        accesses:
          - { isAllowed: true, type: select }
          - { isAllowed: true, type: update }
          - { isAllowed: true, type: Create }
          - { isAllowed: true, type: Drop }
          - { isAllowed: true, type: Alter }
          - { isAllowed: true, type: Index }
          - { isAllowed: true, type: Lock }
          - { isAllowed: true, type: All }
          - { isAllowed: true, type: Read }
          - { isAllowed: true, type: Write }
          - { isAllowed: true, type: Refresh }
        conditions: []
  - name: "hue_test_user1-hive-policy"
    description: Hive Client Check
    service: hive-tdp
    repositoryType: hive
    isAuditEnabled: true
    isEnabled: true
    resources:
      column:
        isExcludes: false
        values: ["*"]
      database:
        isExcludes: false
        values: ["hue_test_user1"]
      table:
        isExcludes: false
        values: ["*"]
    policyItems:
      - users: ["hue_test_user1"]
        groups: ["hue_test_user1"]
        # delegateAdmin: true
        accesses:
          - { isAllowed: true, type: select }
          - { isAllowed: true, type: update }
          - { isAllowed: true, type: Create }
          - { isAllowed: true, type: Drop }
          - { isAllowed: true, type: Alter }
          - { isAllowed: true, type: Index }
          - { isAllowed: true, type: Lock }
          - { isAllowed: true, type: All }
          - { isAllowed: true, type: Read }
          - { isAllowed: true, type: Write }
          - { isAllowed: true, type: Refresh }
        conditions: []
  - name: "hue_test_user2-hive-policy"
    description: Hive Client Check
    service: hive-tdp
    repositoryType: hive
    isAuditEnabled: true
    isEnabled: true
    resources:
      column:
        isExcludes: false
        values: ["*"]
      database:
        isExcludes: false
        values: ["hue_test_user2"]
      table:
        isExcludes: false
        values: ["*"]
    policyItems:
      - users: ["hue_test_user2"]
        groups: ["hue_test_user2"]
        delegateAdmin: true
        accesses:
          - { isAllowed: true, type: select }
          - { isAllowed: true, type: update }
          - { isAllowed: true, type: Create }
          - { isAllowed: true, type: Drop }
          - { isAllowed: true, type: Alter }
          - { isAllowed: true, type: Index }
          - { isAllowed: true, type: Lock }
          - { isAllowed: true, type: All }
          - { isAllowed: true, type: Read }
          - { isAllowed: true, type: Write }
          - { isAllowed: true, type: Refresh }
        conditions: []
