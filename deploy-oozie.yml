---
- hosts: localhost
  become: False
  tasks:
    - name: Check oozie binary exists
      stat:
        path: files/oozie-5.3.0-TDP-0.1.0-SNAPSHOT-distro.tar.gz
      register: oozie_exists
      failed_when: oozie_exists.stat.exists == False

- name: Prepare postgresql for oozie
  hosts: postgresql
  become: yes
  become_user: postgres
  tasks:
    - include_role:
        name: ansible_roles/roles/ansible-tdp-common-actions
        tasks_from: deploy-new-postgres-role
      with_items:
        - oozie

- name: Create oozie user in ranger
  hosts: ranger_admin[0]
  become: yes
  tasks:
    - include_role:
        name: ansible_roles/roles/ansible-tdp-common-actions
        tasks_from: deploy-new-ranger-user
      with_items:
        - username: "{{oozie_user}}"
          password: "{{oozie_user}}123"

- name: Deploy oozie hdfs policies in ranger
  hosts: ranger_admin[0]
  become: yes
  tasks:
    - include_role:
        name: ansible_roles/roles/ansible-tdp-common-actions
        tasks_from: deploy-ranger-hdfs-policy
      with_items:
        - "{{ oozie_hdfs_policies }}"

- hosts: oozie_server:oozie_client
  become: yes
  tasks:
    - name: Deploy oozie
      import_role:
        name: tosit.tdp.oozie

- hosts: oozie_server
  become: yes
  tasks:
    - name: Start oozie-server service
      service:
        name: oozie-server
        state: started

    - name: Create auto setting OOZIE_CLIENT_OPS env var
      copy:
        content: "export OOZIE_CLIENT_OPTS='-Djavax.net.ssl.trustStore={{ oozie_truststore_location }}'"
        dest: /etc/profile.d/OOZIE_CLIENT_OPS.sh
        force: no
        group: sys
        owner: root
        mode: 0755

    - name: Create auto setting OOZIE_CONFIG env var
      copy:
        content: "export OOZIE_CONFIG='/etc/oozie/conf.server'"
        dest: /etc/profile.d/OOZIE_CONFIG.sh
        force: no
        group: sys
        owner: root
        mode: 0755
# ToDo
# - Add oozie HA
